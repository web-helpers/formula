---
const options = {defaultValues: {firstName: 'John'}};
---

<formula-webcomponent data-options={JSON.stringify(options)}>
<form id='test-form'>
  <div class='form-item mb-6'>
    <label
      for='firstName'
      class='block mb-2 text-sm font-medium text-gray-900 dark:text-white'
      >First Name</label
    >
    <input
      id='firstName'
      type='text'
      name='firstName'
      class='bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500'
      placeholder='Enter your first name'
      required
    />
    <p
      style='display: none;'
      class='mt-2 text-sm text-red-600 dark:text-red-500 error-message'
    >
      <span class='font-medium'>Oops!</span> Please enter your name
    </p>
  </div>

  <button
    type='submit'
    class='text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800'
    >Submit</button
  >
</form>
</formula-webcomponent>
<div class='output'>
  <h3>Output</h3>
  <pre id='json-output'></pre>
</div>

<script>
  import '@webhelpers/formula/webcomponent';
  const formulaEl = document.querySelector('formula-webcomponent') as HTMLElement;
  const jsonOutput = document.getElementById('json-output') as HTMLPreElement;

  formulaEl.addEventListener('init', (e: any) => {
    console.log('init', e.detail);
  });

  formulaEl.addEventListener('preChanges', (e: any) => {
    console.log('preChanges', e.detail);
  });
  formulaEl.addEventListener('postChanges', (e: any) => {
    console.log('postChanges', e.detail);
  });

  formulaEl.addEventListener('formValues', (e: any) => {
    jsonOutput.innerHTML = JSON.stringify(e.detail, null, 2);
  });
  formulaEl.addEventListener('validity', (e: any) => {
    Object.entries(e.detail).forEach(([key, value]: [string, any]) => {
      
      const input = document.querySelector(`[name="${key}"]`) as HTMLInputElement;
      const errorMessage = input && input.parentElement?.querySelector('.error-message') as HTMLParagraphElement;
      if (errorMessage) {
        errorMessage.style.display = value?.invalid && errorMessage ? 'block' : 'none';
      }
    });
    console.log('validity', e.detail);
    //jsonOutput.innerHTML = JSON.stringify(e.detail, null, 2);
  });
</script>
